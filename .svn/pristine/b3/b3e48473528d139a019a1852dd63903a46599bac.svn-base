package com.demo.apiserver.message.common;

import java.io.IOException;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;

/**
 * CustomJsonDateDeserializer를 쓰지 않고 아래 class를 추가한 이유는
 * 날짜 형식은 구지 urlencode, decode를 할 필요가 없는데, agent 단에서 yyyy-MM-dd HH:mm:ss 포멧을 encode를 하다보니
 * 데이터 변경이 생겨서 부득 불 서버쪽에서 decode를 함
 * 불피요한 리소스만 차지하는 작업이므로 앞으로 날짜 형식은 이렇게 맞추기 위해서 임
 *
 */
public class CustomDefaultJsonDateDeserializer extends JsonDeserializer<Timestamp> {
    private final static DateTimeFormatter DATETIME_FORMAT = DateTimeFormatter.ofPattern("yyyyMMddHHmmss");

    @Override
    public Timestamp deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext) {
        LocalDateTime date = null;
        try {
            date = LocalDateTime.parse(jsonparser.getText(), DATETIME_FORMAT);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return Timestamp.valueOf(date);
    }
}
