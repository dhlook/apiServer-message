package com.demo.apiserver.message.common;

import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import org.apache.commons.lang3.StringUtils;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;

public class ESJsonDateDeserializer extends JsonDeserializer<String> {

    private final static DateTimeFormatter DATETIME_FORMAT = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    private final static DateTimeFormatter DEFAULT_DATETIME_FORMAT = DateTimeFormatter.ofPattern("yyyyMMdd'T'HHmmss'Z'");
    private final static String DEFAULT_DATE = "18991230T000000Z";

    @Override
    public String deserialize(JsonParser jsonparser, DeserializationContext deserializationcontext) {
        String dateString = null;
        LocalDateTime date = null;
        try {
            dateString = CommonUtils.urlDecode(jsonparser.getText());
            //yyyy-MM-dd HH:mm:ss 문자 길이가 맞지 않으면 비정상 데이터로 처리한다.
            //if("".equals(dateString) || dateString.length() != 19) return "19700101T000000Z";
            if(StringUtils.isEmpty(dateString) || dateString.length() != 19) return DEFAULT_DATE;
        } catch (IOException e) {
            e.printStackTrace();
        }

        date = LocalDateTime.parse(dateString, DATETIME_FORMAT);
        return DEFAULT_DATETIME_FORMAT.format(date);
    }
}
